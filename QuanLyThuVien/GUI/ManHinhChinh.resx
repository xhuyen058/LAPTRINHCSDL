<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>